{"version":3,"sources":["useForm.js","validateInfo.js","FormSignUp.js","FormSuccess.js","Form.js","App.js","index.js"],"names":["useForm","callback","validate","useState","username","email","password","password2","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","e","target","name","value","handleSubmit","preventDefault","validateInfo","trim","test","FormSignUp","submitForm","className","onSubmit","htmlFor","id","type","placeholder","onChange","href","FormSuccess","src","alt","Form","isSubmitted","setIsSubmitted","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9388f3a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n    const [values, setValues] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n    const [errors, setErrors] = useState({})\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    const handleChange = e => {\r\n        // setValues({\r\n        //     ...values,\r\n        //     [e.target.name]: e.target.values\r\n        // })\r\n        // how to make this code much cleaner\r\n        const { name, value } = e.target\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n\r\n        setErrors(validate(values))\r\n        setIsSubmitting(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(errors).length === 0 && isSubmitting) {\r\n            callback();\r\n        }\r\n    }, [errors])\r\n\r\n    return { handleChange, values, handleSubmit, errors }\r\n}\r\n\r\nexport default useForm","export default function validateInfo(values) {\r\n    let errors = {}\r\n\r\n    if(!values.username.trim()) {\r\n        errors.username = 'Username required'\r\n    }\r\n    // else if (!/^[A-Za-z]+/.test(values.name.trim())) {\r\n    //   errors.name = 'Enter a valid name';\r\n    // }\r\n\r\n    //Email\r\n    if(!values.email) {\r\n        errors.email = 'Email required'\r\n    } else if(!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n        errors.email = 'Email address is invalid'\r\n    }\r\n\r\n    if(!values.password) {\r\n        errors.password = 'Password required'\r\n    } else if(values.password.length < 6) {\r\n        errors.password = 'Password needs to be 6 characters or more'\r\n    }\r\n\r\n    if(!values.password2) {\r\n        errors.password2 = 'Password required'\r\n    } else if(values.password2 !== values.password) {\r\n        errors.password2 = 'Password do not match'\r\n    }\r\n\r\n    return errors\r\n}","import React from 'react'\r\nimport useForm from './useForm'\r\nimport validate from './validateInfo'\r\nimport './Form.css'\r\n\r\nconst FormSignUp = ({submitForm}) => {\r\n    const { handleChange, values, handleSubmit, errors }\r\n    = useForm(\r\n        submitForm,\r\n        validate\r\n        )\r\n\r\n    return (\r\n        <div className='form-content-right'>\r\n            <form className='form' onSubmit={handleSubmit}>\r\n                <h1>Get started with us today! Create your account by filling out the information below.</h1>\r\n                <div className='form-inputs'>\r\n                    <label htmlFor='username' className='form-label'>\r\n                        Username\r\n                    </label>\r\n                    <input\r\n                        id='username'\r\n                        type='text'\r\n                        name='username'\r\n                        className='form-input'\r\n                        placeholder='Enter your username'\r\n                        value={values.username}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.username && <p>{errors.username}</p>}\r\n                </div>\r\n                <div className='form-inputs'>\r\n                    <label htmlFor='email' className='form-label'>\r\n                        Email\r\n                    </label>\r\n                    <input\r\n                        id='email'\r\n                        type='email'\r\n                        name='email'\r\n                        className='form-input'\r\n                        placeholder='Enter your email'\r\n                        value={values.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.email && <p>{errors.email}</p>}\r\n                </div>\r\n                <div className='form-inputs'>\r\n                    <label htmlFor='password' className='form-label'>\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        id='password'\r\n                        type='password'\r\n                        name='password'\r\n                        className='form-input'\r\n                        placeholder='Enter your password'\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password && <p>{errors.password}</p>}\r\n                </div>\r\n                <div className='form-inputs'>\r\n                    <label htmlFor='password2' className='form-label'>\r\n                        Confirm Password\r\n                    </label>\r\n                    <input\r\n                        id='password2'\r\n                        type='password'\r\n                        name='password2'\r\n                        className='form-input'\r\n                        placeholder='Confirm your password'\r\n                        value={values.password2}\r\n                        onChange={handleChange}\r\n                    />\r\n                    {errors.password2 && <p>{errors.password2}</p>}\r\n                </div>\r\n                <button className='form-input-btn' type='submit'>\r\n                    Sign Up\r\n                </button>\r\n                <span className='form-input-login'>\r\n                    Already have an account? Login <a href='#'>here</a>\r\n                </span>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSignUp\r\n","import React from 'react'\r\n\r\nconst FormSuccess = () => {\r\n    return (\r\n        <div className='form-content-right'>\r\n            <div className='form-success'>\r\n                We have received your request!\r\n            </div>\r\n            <img src='img/img-3.svg' alt='success-image' className='form-img-2' />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormSuccess\r\n","import React, { useState } from 'react'\r\nimport FormSignUp from './FormSignUp'\r\nimport FormSuccess from './FormSuccess'\r\nimport './Form.css'\r\n\r\nconst Form = () => {\r\n    const [isSubmitted, setIsSubmitted] = useState(false)\r\n\r\n    function submitForm() {\r\n        setIsSubmitted(true)\r\n    }\r\n    return (\r\n        <>\r\n            <div className='form-container'>\r\n                <span className='close-btn'>Ã—</span>\r\n                <div className='form-content-left'>\r\n                <img className='form-img' src='img/img-2.svg' alt='spaceship' />\r\n            </div>\r\n                {!isSubmitted ? (\r\n                    <FormSignUp submitForm={submitForm} />\r\n                ) : (\r\n                    <FormSuccess />\r\n                )}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import './App.css';\nimport Form from './Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}